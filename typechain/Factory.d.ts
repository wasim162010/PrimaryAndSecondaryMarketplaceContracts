/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface FactoryInterface extends ethers.utils.Interface {
  functions: {
    "amountERC1155()": FunctionFragment;
    "amountERC721()": FunctionFragment;
    "assetERC1155()": FunctionFragment;
    "assetERC721()": FunctionFragment;
    "assetsERC1155(uint256)": FunctionFragment;
    "assetsERC721(uint256)": FunctionFragment;
    "initialize(address,address,address,address)": FunctionFragment;
    "marketplace()": FunctionFragment;
    "mint1155(string,bytes)": FunctionFragment;
    "mint721(string,string,bytes)": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "validator()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "amountERC1155",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "amountERC721",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "assetERC1155",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "assetERC721",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "assetsERC1155",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "assetsERC721",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [string, string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "marketplace",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "mint1155",
    values: [string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "mint721",
    values: [string, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "validator", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "amountERC1155",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "amountERC721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "assetERC1155",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "assetERC721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "assetsERC1155",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "assetsERC721",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "marketplace",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "mint1155", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mint721", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "validator", data: BytesLike): Result;

  events: {
    "MintedERC1155(string,address,address)": EventFragment;
    "MintedERC721(address,string,string,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "MintedERC1155"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MintedERC721"): EventFragment;
}

export type MintedERC1155Event = TypedEvent<
  [string, string, string] & { uri: string; creator: string; token: string }
>;

export type MintedERC721Event = TypedEvent<
  [string, string, string, string] & {
    creator: string;
    name: string;
    symbol: string;
    token: string;
  }
>;

export class Factory extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: FactoryInterface;

  functions: {
    amountERC1155(overrides?: CallOverrides): Promise<[BigNumber]>;

    amountERC721(overrides?: CallOverrides): Promise<[BigNumber]>;

    assetERC1155(overrides?: CallOverrides): Promise<[string]>;

    assetERC721(overrides?: CallOverrides): Promise<[string]>;

    assetsERC1155(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    assetsERC721(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    initialize(
      assetERC721_: string,
      assetERC1155_: string,
      marketplace_: string,
      validator_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    marketplace(overrides?: CallOverrides): Promise<[string]>;

    mint1155(
      uri: string,
      signature: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    mint721(
      name: string,
      symbol: string,
      signature: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    validator(overrides?: CallOverrides): Promise<[string]>;
  };

  amountERC1155(overrides?: CallOverrides): Promise<BigNumber>;

  amountERC721(overrides?: CallOverrides): Promise<BigNumber>;

  assetERC1155(overrides?: CallOverrides): Promise<string>;

  assetERC721(overrides?: CallOverrides): Promise<string>;

  assetsERC1155(id: BigNumberish, overrides?: CallOverrides): Promise<string>;

  assetsERC721(id: BigNumberish, overrides?: CallOverrides): Promise<string>;

  initialize(
    assetERC721_: string,
    assetERC1155_: string,
    marketplace_: string,
    validator_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  marketplace(overrides?: CallOverrides): Promise<string>;

  mint1155(
    uri: string,
    signature: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  mint721(
    name: string,
    symbol: string,
    signature: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  supportsInterface(
    interfaceId: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  validator(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    amountERC1155(overrides?: CallOverrides): Promise<BigNumber>;

    amountERC721(overrides?: CallOverrides): Promise<BigNumber>;

    assetERC1155(overrides?: CallOverrides): Promise<string>;

    assetERC721(overrides?: CallOverrides): Promise<string>;

    assetsERC1155(id: BigNumberish, overrides?: CallOverrides): Promise<string>;

    assetsERC721(id: BigNumberish, overrides?: CallOverrides): Promise<string>;

    initialize(
      assetERC721_: string,
      assetERC1155_: string,
      marketplace_: string,
      validator_: string,
      overrides?: CallOverrides
    ): Promise<void>;

    marketplace(overrides?: CallOverrides): Promise<string>;

    mint1155(
      uri: string,
      signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    mint721(
      name: string,
      symbol: string,
      signature: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    validator(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "MintedERC1155(string,address,address)"(
      uri?: string | null,
      creator?: string | null,
      token?: null
    ): TypedEventFilter<
      [string, string, string],
      { uri: string; creator: string; token: string }
    >;

    MintedERC1155(
      uri?: string | null,
      creator?: string | null,
      token?: null
    ): TypedEventFilter<
      [string, string, string],
      { uri: string; creator: string; token: string }
    >;

    "MintedERC721(address,string,string,address)"(
      creator?: string | null,
      name?: string | null,
      symbol?: string | null,
      token?: null
    ): TypedEventFilter<
      [string, string, string, string],
      { creator: string; name: string; symbol: string; token: string }
    >;

    MintedERC721(
      creator?: string | null,
      name?: string | null,
      symbol?: string | null,
      token?: null
    ): TypedEventFilter<
      [string, string, string, string],
      { creator: string; name: string; symbol: string; token: string }
    >;
  };

  estimateGas: {
    amountERC1155(overrides?: CallOverrides): Promise<BigNumber>;

    amountERC721(overrides?: CallOverrides): Promise<BigNumber>;

    assetERC1155(overrides?: CallOverrides): Promise<BigNumber>;

    assetERC721(overrides?: CallOverrides): Promise<BigNumber>;

    assetsERC1155(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    assetsERC721(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initialize(
      assetERC721_: string,
      assetERC1155_: string,
      marketplace_: string,
      validator_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    marketplace(overrides?: CallOverrides): Promise<BigNumber>;

    mint1155(
      uri: string,
      signature: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    mint721(
      name: string,
      symbol: string,
      signature: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    validator(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    amountERC1155(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    amountERC721(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    assetERC1155(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    assetERC721(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    assetsERC1155(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    assetsERC721(
      id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initialize(
      assetERC721_: string,
      assetERC1155_: string,
      marketplace_: string,
      validator_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    marketplace(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    mint1155(
      uri: string,
      signature: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    mint721(
      name: string,
      symbol: string,
      signature: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    validator(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}

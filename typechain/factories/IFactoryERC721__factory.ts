/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IFactoryERC721,
  IFactoryERC721Interface,
} from "../IFactoryERC721";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "MintedERC721",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "mint721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IFactoryERC721__factory {
  static readonly abi = _abi;
  static createInterface(): IFactoryERC721Interface {
    return new utils.Interface(_abi) as IFactoryERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFactoryERC721 {
    return new Contract(address, _abi, signerOrProvider) as IFactoryERC721;
  }
}

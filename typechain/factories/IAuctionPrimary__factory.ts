/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IAuctionPrimary,
  IAuctionPrimaryInterface,
} from "../IAuctionPrimary";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionItemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CanceledAuction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionItemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "lastBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "FinishedAuction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "auctionItemId",
        type: "uint256",
      },
    ],
    name: "ListedAuction",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
    ],
    name: "cancelAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "finishAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "startPrice",
        type: "uint96",
      },
      {
        internalType: "uint128",
        name: "tokenId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint16",
        name: "feeNumerator",
        type: "uint16",
      },
      {
        internalType: "enum IAssetCommon.AssetType",
        name: "assetType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "listAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAuctionPrimary__factory {
  static readonly abi = _abi;
  static createInterface(): IAuctionPrimaryInterface {
    return new utils.Interface(_abi) as IAuctionPrimaryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAuctionPrimary {
    return new Contract(address, _abi, signerOrProvider) as IAuctionPrimary;
  }
}
